# Generated by Django 2.2.9 on 2020-02-12 20:15

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestmentGameUser',
            fields=[
                ('gamesuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('core.gamesuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='invest_game.InvestmentGameUser')),
                ('respondent', models.CharField(choices=[('Ibrahim', 'Respondent is Ibrahim'), ('Sahr', 'Respondent is Sahr'), ('Sahal', 'Respondent is Sahal'), ('Omar', 'Respondent is Omar'), ('Eman', 'Respondent is Eman'), ('Douglas', 'Respondent is Douglas'), ('Christopher', 'Respondent is Christopher'), ('Philip', 'Respondent is Philip'), ('Theresa', 'Respondent is Theresa'), ('Tracy', 'Respondent is Tracy')], max_length=256, null=True)),
                ('started_experiment', models.DateTimeField(help_text='When the user landed on the welcome page', null=True)),
                ('reached_stage', models.CharField(choices=[('select_respondent', 'User reached respondent selection stage'), ('user_investment', 'User reached user investment stage'), ('respondent_investment', 'User reached respondent investment stage'), ('question1', 'User reached question 1 stage'), ('question1_5', 'User reached question 1.5 stage'), ('question2', 'User reached question 2 stage'), ('question3', 'User reached question 3 stage'), ('compare', 'User reached compare stage'), ('finish', 'User reached finish stage')], default='select_respondent', max_length=256)),
                ('started_select_respondent', models.DateTimeField(help_text='When the user landed on the select respondent stage', null=True)),
                ('started_user_investment', models.DateTimeField(help_text='When the user landed on the user investment stage', null=True)),
                ('started_respondent_investment', models.DateTimeField(help_text='When the user landed on the respondent investment stage', null=True)),
                ('started_compare', models.DateTimeField(help_text='When the user landed on the compare stage', null=True)),
                ('started_question_1', models.DateTimeField(help_text='When the user landed on the question 1 stage', null=True)),
                ('started_question_1_5', models.DateTimeField(help_text='When the user landed on the question 1.5 stage (if relevant)', null=True)),
                ('started_question_2', models.DateTimeField(help_text='When the user landed on the question 2 stage', null=True)),
                ('started_question_3', models.DateTimeField(help_text='When the user landed on the question 3 stage', null=True)),
                ('started_finish', models.DateTimeField(help_text='When the user landed on the finish stage, and completed the experiment', null=True)),
                ('user_investment', models.IntegerField(null=True)),
                ('respondent_investment_guess', models.IntegerField(null=True)),
                ('respondent_investment', models.IntegerField(null=True)),
                ('user_bonus', models.IntegerField(choices=[(2, 'User received a bonus of $2'), (0, 'User received no bonus ($0)')], null=True)),
                ('user_received', models.IntegerField(null=True)),
                ('us_citizen', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Are you a U.S. citizen?', max_length=255, null=True)),
                ('voted_last_election', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Did you vote for a presidential candidate in the last election?', max_length=255, null=True)),
                ('how_voted', models.CharField(choices=[('trump', 'Donald Trump'), ('clinton', 'Hillary Clinton'), ('other', 'Other'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Whom did you vote for?', max_length=255, null=True)),
                ('political_views', models.CharField(choices=[('democrats', 'The Democrats'), ('republicans', 'The Republicans'), ('other', 'Other'), ('no_preference', 'No preference'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Are your political views generally closer to...', max_length=255, null=True)),
                ('multiple_agreement_question', models.CharField(max_length=255, null=True)),
                ('multiple_agreement_question_type', models.CharField(choices=[('control', 'User was presented with the control question'), ('with_immigration', 'User was presented with the immigration option'), ('with_muslim_immigration', 'User was presented with the Muslim immigration option')], max_length=255, null=True)),
                ('news_source', models.CharField(choices=[('abc_nbc_cbs', 'ABC, NBC, or CBS'), ('cnn', 'CNN'), ('fox_news', 'Fox News'), ('local_tv_radio', 'Local TV or radio'), ('msnbc', 'MSNBC'), ('npr_pbs', 'NPR (National Public Radio) or PBS'), ('newspapers', 'Newspapers, online or in paper'), ('facebook', 'Facebook'), ('twitter', 'Twitter')], help_text='Which do you think is your main source of news?', max_length=255, null=True)),
                ('muslims_in_neighborhood', models.CharField(choices=[('many', 'Many'), ('some', 'Some'), ('none', 'None at all'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Are there Muslims living in your neighborhood?', max_length=255, null=True)),
                ('muslim_coworkers', models.CharField(choices=[('many', 'Many'), ('some', 'Some'), ('none', 'None at all'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Do you have Muslim co-workers?', max_length=255, null=True)),
                ('self_treated_unfairly', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Have you, personally, ever been treated unfairly due to your race, ethnicity, or religion?', max_length=255, null=True)),
                ('race_treated_unfairly', models.CharField(choices=[('often', 'Often'), ('sometimes', 'Sometimes'), ('seldom', 'Seldom'), ('never', 'Never'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Do you think people of your race or ethnicity are treated unfairly?', max_length=255, null=True)),
                ('religion_treated_unfairly', models.CharField(choices=[('often', 'Often'), ('sometimes', 'Sometimes'), ('seldom', 'Seldom'), ('never', 'Never'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Do you think people of your religion are treated unfairly?', max_length=255, null=True)),
                ('general_trustworthiness', models.CharField(choices=[('most_people', 'Most people can be trusted'), ('cant_be_too_careful', "Can't be too careful"), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='Generally speaking, would you say that most people can be trusted or that you canâ€™t be too careful in dealing with people?', max_length=255, null=True)),
                ('economic_outlook', models.CharField(choices=[('get_better', 'Get better'), ('stay_the_same', 'Stay the same'), ('get_worse', 'Get worse'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='What about the next 12 months? Do you expect the national economy to get better, get worse, or stay about the same?', max_length=255, null=True)),
                ('islamic_extremism', models.CharField(choices=[('very_concerned', 'Very concerned'), ('somewhat_concerned', 'Somewhat concerned'), ('not_too_concerned', 'Not too concerned'), ('not_concerned', 'Not concerned'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='How concerned are you about the rise of Islamic extremism in the U.S.?', max_length=255, null=True)),
                ('reducing_terrorism', models.CharField(choices=[('very_well', 'Very well'), ('fairly_well', 'Fairly well'), ('not_very_well', 'Not very well'), ('not_well_at_all', 'Not well at all'), ('dont_know', "Don't know"), ('refuse_to_answer', 'Refuse to answer')], help_text='In general, how well do you think the American government is doing in reducing the threat of terrorism?', max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
